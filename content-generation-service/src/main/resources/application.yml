spring:
  application:
    name: content-generation-service
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST}
    port: ${SPRING_RABBITMQ_PORT}
    username: ${SPRING_RABBITMQ_USERNAME}
    password: ${SPRING_RABBITMQ_PASSWORD}
    ssl:
      enabled: true

# Port for this service
server:
  port: ${SERVER_PORT}

app:
  rabbitmq:
    exchange: "content_exchange"
    payment-exchange: "payment_exchange"
    queues:
      # CGS only needs to know about the queue it listens to
      generation-requests: "q.generation.requests"
    routing-keys:
      # Routing key for sending generation results
      generation-result: "generation.result"
      # CGS needs to know the prefix for receiving requests
      generation-request-prefix: "request.generate."
      # CGS needs to know the routing key for status updates
      content-status: "content.status"
  tts:
    elevenlabs:
      # Load the secret API key from an environment variable.
      api-key: ${ELEVENLABS_API_KEY}
    speechify:
      # Load the secret API key from an environment variable.
      api-key: ${SPEECHIFY_API_KEY}
      voice-mapping:
        rick: ${SPEECHIFY_VOICEID_RICK}
        morty: ${SPEECHIFY_VOICEID_MORTY}
        peter: ${SPEECHIFY_VOICEID_PETER}
        stewie: ${SPEECHIFY_VOICEID_STEWIE}
        homer: ${SPEECHIFY_VOICEID_HOMER}
        ned: ${SPEECHIFY_VOICEID_NED}
    cloning:
      # Directory where character audio samples are stored.
      audio-dir-path: classpath:assets/audio
  transcription:
    # Selects the OpenAiTranscriptionProvider bean via @ConditionalOnProperty
    provider: openai
  video:
    # Default video width and height
    width: 1080
    height: 1920
  assets:
    videos: "videos/"
    characters: "images/characters/"
    audio: "audio/"
    reddit-images: "images/reddit/"
    images: "images/"
    fonts: "fonts/"
    base-path: ${ASSETS_FOLDER_PATH}
  openai:
    api-key: ${OPENAI_API_KEY}
    llm:
      url: https://api.openai.com/v1/chat/completions
      model: gpt-4
      temperature: 0.5
      max-tokens: 1024
  google:
    api-key: ${GOOGLE_API_KEY}
    cse-id: ${GOOGLE_CSE_ID}

management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: never